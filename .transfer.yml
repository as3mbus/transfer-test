push-external:
  stage: transfer-external
  tags: 
    - powershell
    - unity
    - windows-runner-01
  when: manual
  only: 
    - develop-art
  allow_failure: true
  before_script:
    - echo "Pushing change to \$CI_COMMIT_BRANCH of EXTERNAL_REMOTE.`n`n\
      Required Variables with Descriptions:`n\
      EXTERNAL_REMOTE = The name of the external remote repository.`n\
      EXTERNAL_ACCESS_TOKEN = Access token for authentication with the external remote repository.`n\
      EXTERNAL_REMOTE_PATH = The URL path of the external remote repository."
  script:
    - echo "Pushing change of $CI_COMMIT_BRANCH to $EXTERNAL_REMOTE."
    
    - git lfs fetch origin --all
    # Check existing remotes
    - echo "Existing remotes:"
    - git remote -v

    # Optional: Verify the correct remote is defined
    - |
      if (git remote get-url $EXTERNAL_REMOTE) {
        Write-Host "Remote $EXTERNAL_REMOTE already exists. Removing ..."
        git remote remove $EXTERNAL_REMOTE
      }

    - Write-Host "Adding remote $EXTERNAL_REMOTE..."
    - git remote add $EXTERNAL_REMOTE https://$EXTERNAL_ACCESS_TOKEN@$EXTERNAL_REMOTE_PATH

    # Push all tags to the existing remote
    - Write-Host "Pushing to the remote repository..."
    - git push $EXTERNAL_REMOTE HEAD:refs/heads/$CI_COMMIT_BRANCH
    - git lfs push --all $EXTERNAL_REMOTE

pull-external:
  stage: transfer-external
  when: manual
  only: 
    - develop-art
  tags: 
    - powershell
    - unity
    - windows-runner-01
  allow_failure: true
  before_script:
    - echo "Pulling EXTERNAL_UPSTREAM_BRANCH changes from EXTERNAL_REMOTE and pushing it to INTERNAL_REMOTE.`n`n\
      Required Variables with Descriptions:`n\
      EXTERNAL_UPSTREAM_BRANCH = The branch name in the external remote repository to pull changes from.`n\
      EXTERNAL_REMOTE = The name of the external remote repository.`n\
      EXTERNAL_ACCESS_TOKEN = Access token for authentication with the external remote repository.`n\
      EXTERNAL_REMOTE_PATH = The URL path of the external remote repository.`n\
      INTERNAL_REMOTE = The name of the internal remote repository.`n\
      INTERNAL_ACCESS_TOKEN = Access token for authentication with the internal remote repository.`n\
      INTERNAL_REMOTE_PATH = The URL path of the internal remote repository."
  script:
    - echo "Pulling $EXTERNAL_UPSTREAM_BRANCH changes from $EXTERNAL_REMOTE and pushing it to $INTERNAL_REMOTE."
    # Check existing remotes
    - echo "Existing remotes:"
    - git remote -v

    # Optional: Verify the correct remote is defined
    - echo "Setting Remote"
    - |
      if (git remote get-url $INTERNAL_REMOTE) {
        Write-Host "Remote $INTERNAL_REMOTE already exists. Removing ..."
        git remote remove $INTERNAL_REMOTE
      }
    - echo "Adding remote $INTERNAL_REMOTE..."
    - git remote add $INTERNAL_REMOTE http://$INTERNAL_ACCESS_TOKEN@$INTERNAL_REMOTE_PATH

    - |
      if (git remote get-url $EXTERNAL_REMOTE) {
        Write-Host "Remote $EXTERNAL_REMOTE already exists. Removing ..." 
        git remote remove $EXTERNAL_REMOTE
      }
    - Write-Host "Adding remote $EXTERNAL_REMOTE..."
    - git remote add $EXTERNAL_REMOTE https://$EXTERNAL_ACCESS_TOKEN@$EXTERNAL_REMOTE_PATH.git
    
    # Pulling from the $EXTERNAL_REMOTE repository...
    - echo "Pulling from the $EXTERNAL_REMOTE repository..."

    - git fetch $EXTERNAL_REMOTE
    - git lfs fetch --all $EXTERNAL_REMOTE
    
    # Pushing to $INTERNAL_REMOTE repository...
    - echo "Pushing $EXTERNAL_UPSTREAM_BRANCH to $INTERNAL_REMOTE repository..."

    - $sourceBranch = "$EXTERNAL_REMOTE/$EXTERNAL_UPSTREAM_BRANCH"
    - $destinationBranch = "refs/heads/$EXTERNAL_UPSTREAM_BRANCH"
    - git push $INTERNAL_REMOTE "$sourceBranch:$destinationBranch"
    - git lfs push $INTERNAL_REMOTE --all